Nonterminals useless in grammar

    datatype


Terminals unused in grammar

    NUM
    SELECT
    FROM
    WHERE
    GROUPBY
    INSERT
    LS
    GR
    GE
    LE
    EQ
    IN
    false
    true
    UNARY_MINUS
    BOOLEAN
    VARCHAR
    INTEGER
    FLOAT


Grammar

    0 $accept: line $end

    1 line: expr '\n'

    2 expr: CREATE ID '(' table_def ')'

    3 table_def: ID
    4          | ID ',' table_def


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    '(' (40) 2
    ')' (41) 2
    ',' (44) 4
    error (256)
    NUM <value> (258)
    CREATE (259) 2
    SELECT (260)
    FROM (261)
    WHERE (262)
    GROUPBY (263)
    INSERT (264)
    LS (265)
    GR (266)
    GE (267)
    LE (268)
    EQ (269)
    IN (270)
    false (271)
    true (272)
    ID <lexeme> (273) 2 3 4
    UNARY_MINUS (274)
    BOOLEAN (275)
    VARCHAR (276)
    INTEGER (277)
    FLOAT (278)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    line <value> (29)
        on left: 1
        on right: 0
    expr <value> (30)
        on left: 2
        on right: 1
    table_def <value> (31)
        on left: 3 4
        on right: 2 4


State 0

    0 $accept: • line $end

    CREATE  shift, and go to state 1

    line  go to state 2
    expr  go to state 3


State 1

    2 expr: CREATE • ID '(' table_def ')'

    ID  shift, and go to state 4


State 2

    0 $accept: line • $end

    $end  shift, and go to state 5


State 3

    1 line: expr • '\n'

    '\n'  shift, and go to state 6


State 4

    2 expr: CREATE ID • '(' table_def ')'

    '('  shift, and go to state 7


State 5

    0 $accept: line $end •

    $default  accept


State 6

    1 line: expr '\n' •

    $default  reduce using rule 1 (line)


State 7

    2 expr: CREATE ID '(' • table_def ')'

    ID  shift, and go to state 8

    table_def  go to state 9


State 8

    3 table_def: ID •
    4          | ID • ',' table_def

    ','  shift, and go to state 10

    $default  reduce using rule 3 (table_def)


State 9

    2 expr: CREATE ID '(' table_def • ')'

    ')'  shift, and go to state 11


State 10

    4 table_def: ID ',' • table_def

    ID  shift, and go to state 8

    table_def  go to state 12


State 11

    2 expr: CREATE ID '(' table_def ')' •

    $default  reduce using rule 2 (expr)


State 12

    4 table_def: ID ',' table_def •

    $default  reduce using rule 4 (table_def)
